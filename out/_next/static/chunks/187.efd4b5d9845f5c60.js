(self.webpackChunk_N_E=self.webpackChunk_N_E||[]).push([[187],{7510:function(n,e,r){"use strict";r.r(e),r.d(e,{DisplacementSphere:function(){return P}});var t=r(8616),i=r(1799),c=r(9815),a=r(5893),o=r(8718),u=r(7260),l=r(3302),s=r(3520),g=r(4529),f=r(7294),v=r(9477),d=r(2362),m=r(3142),p=r(9030),x=r.n(p),y=r.p+"static/media/song.bbc8cf4c.mp3",_=r(1879),z={stiffness:30,damping:20,mass:2},P=function(n){var e=(0,o.Fg)(),r=e.rgbBackground,p=e.themeId,P=e.colorWhite,h=(0,f.useRef)(Date.now()),w=(0,f.useRef)(),b=(0,f.useRef)(),S=(0,f.useRef)(),I=(0,f.useRef)(),R=(0,f.useRef)(),C=(0,f.useRef)(),E=(0,f.useRef)(),L=(0,f.useRef)(),k=(0,f.useRef)(),D=(0,f.useRef)(),M=(0,l.J)(),j=(0,g.NM)(w),F=(0,g.iP)(),A=(0,s.q)(0,z),N=(0,s.q)(0,z),T=(0,f.useRef)(null),B=(0,f.useState)(!1),Z=B[0],q=B[1],O=(0,f.useState)(.85),G=O[0],U=O[1],V=(0,f.useState)(0),H=(V[0],V[1]),J=(0,f.useState)(0),W=(J[0],J[1]),Y=(0,f.useState)(!1),K=Y[0],Q=Y[1],X=(0,f.useState)(new Array(30).fill(0)),$=X[0],nn=X[1];(0,f.useEffect)((function(){T.current=new Audio(y);var n=localStorage.getItem("audioCurrentTime"),e=localStorage.getItem("audioIsPlaying");T.current.addEventListener("loadedmetadata",(function(){W(T.current.duration)})),n&&(T.current.currentTime=parseFloat(n),H(parseFloat(n))),"true"===e&&(T.current.play().catch((function(n){return console.error("Audio playback failed:",n)})),q(!0),U(.95));var r=function(){if(H(T.current.currentTime),localStorage.setItem("audioCurrentTime",T.current.currentTime),Z){var n=$.map((function(){return Math.random()*(Z?1:.1)}));nn(n)}},t=setInterval(r,50);return T.current.addEventListener("timeupdate",r),function(){clearInterval(t),T.current.removeEventListener("timeupdate",r),T.current&&(T.current.pause(),localStorage.setItem("audioCurrentTime",T.current.currentTime),localStorage.setItem("audioIsPlaying",Z))}}),[]);var en=function(){T.current&&(Z?(T.current.pause(),U(.85)):(T.current.play().catch((function(n){return console.error("Audio playback failed:",n)})),U(.7)),q(!Z),localStorage.setItem("audioIsPlaying",!Z))};(0,f.useEffect)((function(){var n=window.innerWidth,e=window.innerHeight;return b.current=new v.FM8(.8,.5),S.current=new v.CP7({canvas:w.current,antialias:!1,alpha:!0,powerPreference:"high-performance",failIfMajorPerformanceCaveat:!0}),S.current.setSize(n,e),S.current.setPixelRatio(window.devicePixelRatio),S.current.outputEncoding=v.knz,I.current=new v.cPb(54,n/e,.1,100),I.current.position.z=52,R.current=new v.xsS,L.current=new v.xoR,L.current.onBeforeCompile=function(n){E.current=v.rDY.merge([n.uniforms,{time:{type:"f",value:0},isPlaying:{value:Z}}]),n.uniforms=E.current,n.vertexShader='//\n// GLSL textureless classic 3D noise "cnoise",\n// with an RSL-style periodic variant "pnoise".\n// Author:  Stefan Gustavson (stefan.gustavson@liu.se)\n// Version: 2011-10-11\n//\n// Many thanks to Ian McEwan of Ashima Arts for the\n// ideas for permutation and gradient selection.\n//\n// Copyright (c) 2011 Stefan Gustavson. All rights reserved.\n// Distributed under the MIT license. See LICENSE file.\n// https://github.com/ashima/webgl-noise\n//\n\n#define PHONG\n\nvec3 mod289(vec3 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 mod289(vec4 x)\n{\n  return x - floor(x * (1.0 / 289.0)) * 289.0;\n}\n\nvec4 permute(vec4 x)\n{\n  return mod289(((x*34.0)+1.0)*x);\n}\n\nvec4 taylorInvSqrt(vec4 r)\n{\n  return 1.79284291400159 - 0.85373472095314 * r;\n}\n\nvec3 fade(vec3 t) {\n  return t*t*t*(t*(t*6.0-15.0)+10.0);\n}\n\n// Classic Perlin noise\nfloat cnoise(vec3 P)\n{\n  vec3 Pi0 = floor(P); // Integer part for indexing\n  vec3 Pi1 = Pi0 + vec3(1.0); // Integer part + 1\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\n// Classic Perlin noise, periodic variant\nfloat pnoise(vec3 P, vec3 rep)\n{\n  vec3 Pi0 = mod(floor(P), rep); // Integer part, modulo period\n  vec3 Pi1 = mod(Pi0 + vec3(1.0), rep); // Integer part + 1, mod period\n  Pi0 = mod289(Pi0);\n  Pi1 = mod289(Pi1);\n  vec3 Pf0 = fract(P); // Fractional part for interpolation\n  vec3 Pf1 = Pf0 - vec3(1.0); // Fractional part - 1.0\n  vec4 ix = vec4(Pi0.x, Pi1.x, Pi0.x, Pi1.x);\n  vec4 iy = vec4(Pi0.yy, Pi1.yy);\n  vec4 iz0 = Pi0.zzzz;\n  vec4 iz1 = Pi1.zzzz;\n\n  vec4 ixy = permute(permute(ix) + iy);\n  vec4 ixy0 = permute(ixy + iz0);\n  vec4 ixy1 = permute(ixy + iz1);\n\n  vec4 gx0 = ixy0 * (1.0 / 7.0);\n  vec4 gy0 = fract(floor(gx0) * (1.0 / 7.0)) - 0.5;\n  gx0 = fract(gx0);\n  vec4 gz0 = vec4(0.5) - abs(gx0) - abs(gy0);\n  vec4 sz0 = step(gz0, vec4(0.0));\n  gx0 -= sz0 * (step(0.0, gx0) - 0.5);\n  gy0 -= sz0 * (step(0.0, gy0) - 0.5);\n\n  vec4 gx1 = ixy1 * (1.0 / 7.0);\n  vec4 gy1 = fract(floor(gx1) * (1.0 / 7.0)) - 0.5;\n  gx1 = fract(gx1);\n  vec4 gz1 = vec4(0.5) - abs(gx1) - abs(gy1);\n  vec4 sz1 = step(gz1, vec4(0.0));\n  gx1 -= sz1 * (step(0.0, gx1) - 0.5);\n  gy1 -= sz1 * (step(0.0, gy1) - 0.5);\n\n  vec3 g000 = vec3(gx0.x,gy0.x,gz0.x);\n  vec3 g100 = vec3(gx0.y,gy0.y,gz0.y);\n  vec3 g010 = vec3(gx0.z,gy0.z,gz0.z);\n  vec3 g110 = vec3(gx0.w,gy0.w,gz0.w);\n  vec3 g001 = vec3(gx1.x,gy1.x,gz1.x);\n  vec3 g101 = vec3(gx1.y,gy1.y,gz1.y);\n  vec3 g011 = vec3(gx1.z,gy1.z,gz1.z);\n  vec3 g111 = vec3(gx1.w,gy1.w,gz1.w);\n\n  vec4 norm0 = taylorInvSqrt(vec4(dot(g000, g000), dot(g010, g010), dot(g100, g100), dot(g110, g110)));\n  g000 *= norm0.x;\n  g010 *= norm0.y;\n  g100 *= norm0.z;\n  g110 *= norm0.w;\n  vec4 norm1 = taylorInvSqrt(vec4(dot(g001, g001), dot(g011, g011), dot(g101, g101), dot(g111, g111)));\n  g001 *= norm1.x;\n  g011 *= norm1.y;\n  g101 *= norm1.z;\n  g111 *= norm1.w;\n\n  float n000 = dot(g000, Pf0);\n  float n100 = dot(g100, vec3(Pf1.x, Pf0.yz));\n  float n010 = dot(g010, vec3(Pf0.x, Pf1.y, Pf0.z));\n  float n110 = dot(g110, vec3(Pf1.xy, Pf0.z));\n  float n001 = dot(g001, vec3(Pf0.xy, Pf1.z));\n  float n101 = dot(g101, vec3(Pf1.x, Pf0.y, Pf1.z));\n  float n011 = dot(g011, vec3(Pf0.x, Pf1.yz));\n  float n111 = dot(g111, Pf1);\n\n  vec3 fade_xyz = fade(Pf0);\n  vec4 n_z = mix(vec4(n000, n100, n010, n110), vec4(n001, n101, n011, n111), fade_xyz.z);\n  vec2 n_yz = mix(n_z.xy, n_z.zw, fade_xyz.y);\n  float n_xyz = mix(n_yz.x, n_yz.y, fade_xyz.x);\n  return 2.2 * n_xyz;\n}\n\nfloat turbulence(vec3 p) {\n  float w = 100.0;\n  float t = -.5;\n  for (float f = 1.0 ; f <= 10.0 ; f++) {\n    float power = pow(2.0, f);\n    t += abs(pnoise(vec3(power * p), vec3(10.0, 10.0, 10.0)) / power);\n  }\n  return t;\n}\n\n// START\nuniform float time;\nvarying vec2 vUv;\nvarying float noise;\n\nvarying vec3 vViewPosition;\n\n#include <common>\n#include <uv_pars_vertex>\n#include <uv2_pars_vertex>\n#include <displacementmap_pars_vertex>\n#include <envmap_pars_vertex>\n#include <color_pars_vertex>\n#include <fog_pars_vertex>\n#include <normal_pars_vertex>\n#include <morphtarget_pars_vertex>\n#include <skinning_pars_vertex>\n#include <shadowmap_pars_vertex>\n#include <logdepthbuf_pars_vertex>\n#include <clipping_planes_pars_vertex>\n\nvoid main() {\n\t#include <uv_vertex>\n\t#include <uv2_vertex>\n\t#include <color_vertex>\n\t#include <morphcolor_vertex>\n\t#include <beginnormal_vertex>\n\t#include <morphnormal_vertex>\n\t#include <skinbase_vertex>\n\t#include <skinnormal_vertex>\n\t#include <defaultnormal_vertex>\n\t#include <normal_vertex>\n\t#include <begin_vertex>\n\t#include <morphtarget_vertex>\n\t#include <skinning_vertex>\n\t#include <displacementmap_vertex>\n\t#include <project_vertex>\n\t#include <logdepthbuf_vertex>\n\t#include <clipping_planes_vertex>\n\n\tvViewPosition = - mvPosition.xyz;\n\n\t#include <worldpos_vertex>\n\t#include <envmap_vertex>\n\t#include <shadowmap_vertex>\n\t#include <fog_vertex>\n\n  vUv = uv;\n\n  noise = turbulence(0.01 * position + normal + time * 0.8);\n  vec3 displacement = vec3((position.x) * noise, position.y * noise, position.z * noise);\n  gl_Position = projectionMatrix * modelViewMatrix * vec4((position + normal) + displacement, 1.0);\n}\n',n.fragmentShader="#define PHONG\r\n\r\nuniform vec3 diffuse;\r\nuniform vec3 emissive;\r\nuniform vec3 specular;\r\nuniform float shininess;\r\nuniform float opacity;\r\n\r\nuniform float time;\r\nvarying vec2 vUv;\r\nvarying vec3 newPosition;\r\nvarying float noise;\r\n\r\n#include <common>\r\n#include <packing>\r\n#include <dithering_pars_fragment>\r\n#include <color_pars_fragment>\r\n#include <uv_pars_fragment>\r\n#include <uv2_pars_fragment>\r\n#include <map_pars_fragment>\r\n#include <alphamap_pars_fragment>\r\n#include <alphatest_pars_fragment>\r\n#include <aomap_pars_fragment>\r\n#include <lightmap_pars_fragment>\r\n#include <emissivemap_pars_fragment>\r\n#include <envmap_common_pars_fragment>\r\n#include <envmap_pars_fragment>\r\n#include <cube_uv_reflection_fragment>\r\n#include <fog_pars_fragment>\r\n#include <bsdfs>\r\n#include <lights_pars_begin>\r\n#include <normal_pars_fragment>\r\n#include <lights_phong_pars_fragment>\r\n#include <shadowmap_pars_fragment>\r\n#include <bumpmap_pars_fragment>\r\n#include <normalmap_pars_fragment>\r\n#include <specularmap_pars_fragment>\r\n#include <logdepthbuf_pars_fragment>\r\n#include <clipping_planes_pars_fragment>\r\n\r\nvoid main() {\r\n\t#include <clipping_planes_fragment>\r\n\r\n  vec3 color = vec3(vUv * (0.2 - 2.0 * noise), 1.0);\r\n  vec3 finalColors = vec3(color.b * 1.5, color.r, color.r);\r\n  vec4 diffuseColor = vec4(cos(finalColors * noise * 3.0), 1.0);\r\n  ReflectedLight reflectedLight = ReflectedLight(vec3(0.0), vec3(0.0), vec3(0.0), vec3(0.0));\r\n  vec3 totalEmissiveRadiance = emissive;\r\n\r\n\t#include <logdepthbuf_fragment>\r\n\t#include <map_fragment>\r\n\t#include <color_fragment>\r\n\t#include <alphamap_fragment>\r\n\t#include <alphatest_fragment>\r\n\t#include <specularmap_fragment>\r\n\t#include <normal_fragment_begin>\r\n\t#include <normal_fragment_maps>\r\n\t#include <emissivemap_fragment>\r\n\t#include <lights_phong_fragment>\r\n\t#include <lights_fragment_begin>\r\n\t#include <lights_fragment_maps>\r\n\t#include <lights_fragment_end>\r\n\t#include <aomap_fragment>\r\n\r\n\tvec3 outgoingLight = reflectedLight.directDiffuse + reflectedLight.indirectDiffuse + reflectedLight.directSpecular + reflectedLight.indirectSpecular + totalEmissiveRadiance;\r\n  \r\n\t#include <envmap_fragment>\r\n\t#include <output_fragment>\r\n\t#include <tonemapping_fragment>\r\n\t#include <encodings_fragment>\r\n\t#include <fog_fragment>\r\n\t#include <premultiplied_alpha_fragment>\r\n\t#include <dithering_fragment>\r\n\r\n  gl_FragColor = vec4(outgoingLight, diffuseColor.a);\r\n}"},(0,f.startTransition)((function(){k.current=new v.Aip(32,128,128),D.current=new v.Kj0(k.current,L.current),D.current.position.z=0,D.current.modifier=Math.random(),R.current.add(D.current)})),function(){(0,m.in)(R.current),(0,m.e8)(S.current)}}),[]),(0,f.useEffect)((function(){var n=new v.Ox3(P,.6),e=new v.Mig(P,"light"===p?.8:.1);return n.position.set(100,100,200),C.current=[n,e],R.current.background=(0,t.Z)(v.Ilk,(0,c.Z)((0,d.Zm)(r))),C.current.forEach((function(n){return R.current.add(n)})),function(){(0,m.Ji)(C.current)}}),[r,P,p]),(0,f.useEffect)((function(){var n=F.width,e=F.height,r=e+.3*e;S.current.setSize(n,r),I.current.aspect=n/r,I.current.updateProjectionMatrix(),n<=d.BC.mobile?D.current.position.set(14,10,0):n<=d.BC.tablet?D.current.position.set(18,14,0):D.current.position.set(22,16,0)}),[F]),(0,f.useEffect)((function(){var n,e=function(){n=requestAnimationFrame(e),E.current&&(E.current.time.value=5e-5*(Date.now()-h.current),E.current.isPlaying.value=Z),D.current&&(D.current.rotation.z+=Z?.04:.001,D.current.rotation.x=A.get(),D.current.rotation.y=N.get()),S.current.render(R.current,I.current)};return!M&&j?e():S.current.render(R.current,I.current),function(){cancelAnimationFrame(n)}}),[j,M,A,N,Z]),(0,f.useEffect)((function(){var n=function(n){var e=n.clientX/window.innerWidth,r=n.clientY/window.innerHeight;A.set(.7*r-1),N.set(.7*e-1)};return!M&&j&&window.addEventListener("mousemove",n),function(){window.removeEventListener("mousemove",n)}}),[j,M,A,N]);return(0,a.jsx)(u.u,{in:!0,timeout:3e3,children:function(e){return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)("canvas",(0,i.Z)({"aria-hidden":!0,className:x().canvas,"data-visible":e,ref:w},n)),(0,a.jsxs)("button",{onClick:en,onMouseEnter:function(){return Q(!0)},onMouseLeave:function(){return Q(!1)},"aria-label":Z?"Pause background music":"Play background music",className:x().musicButton,"data-playing":Z,style:{opacity:K?1:G,transform:"scale(1) translateZ(0)",transition:"all 0.5s cubic-bezier(0.4, 0, 0.2, 1)"},children:[(0,a.jsx)(_.J,{icon:Z?"pause":"play",style:{fontSize:"24px",transition:"transform 0.3s cubic-bezier(0.4, 0, 0.2, 1)",transform:K?"scale(1.1)":"scale(1)",filter:"drop-shadow(0 0 8px rgba(var(--rgbPrimary), ".concat(K?.4:.2,"))")}}),(0,a.jsx)("div",{className:x().visualizer,children:(0,c.Z)(Array(3)).map((function(n,e){return(0,a.jsx)("div",{className:x().visualizerBar,style:{height:Z?"".concat(100*($[e]||.3),"%"):["65%","100%","80%"][e],opacity:Z?1:.8}},e)}))})]})]})}})}},3142:function(n,e,r){"use strict";r.d(e,{Et:function(){return l},Ji:function(){return v},Zf:function(){return u},e8:function(){return f},in:function(){return s}});var t=r(9477),i=r(4976),c=r(7607);t.CtF.enabled=!0;var a=new i._,o=new c.E;a.setDecoderPath("/draco/"),o.setDRACOLoader(a);var u=o,l=new t.dpR,s=function(n){null===n||void 0===n||n.traverse((function(n){if(n.isMesh)if(n.geometry.dispose(),n.material.isMaterial)g(n.material);else{var e=!0,r=!1,t=void 0;try{for(var i,c=n.material[Symbol.iterator]();!(e=(i=c.next()).done);e=!0){var a=i.value;g(a)}}catch(o){r=!0,t=o}finally{try{e||null==c.return||c.return()}finally{if(r)throw t}}}}))},g=function(n){n.dispose();var e=!0,r=!1,t=void 0;try{for(var i,c=Object.keys(n)[Symbol.iterator]();!(e=(i=c.next()).done);e=!0){var a,o,u,l=n[i.value];if(l&&"object"===typeof l&&"minFilter"in l)l.dispose(),null===(a=l.source)||void 0===a||null===(o=a.data)||void 0===o||null===(u=o.close)||void 0===u||u.call(o)}}catch(s){r=!0,t=s}finally{try{e||null==c.return||c.return()}finally{if(r)throw t}}},f=function(n){n.dispose(),n=null},v=function(n){var e=!0,r=!1,t=void 0;try{for(var i,c=n[Symbol.iterator]();!(e=(i=c.next()).done);e=!0){var a=i.value;a.parent.remove(a)}}catch(o){r=!0,t=o}finally{try{e||null==c.return||c.return()}finally{if(r)throw t}}}},9030:function(n){n.exports={canvas:"DisplacementSphere_canvas__zrcVe",musicButton:"DisplacementSphere_musicButton__NfgCW",visualizer:"DisplacementSphere_visualizer__Z1I_Z",visualizerBar:"DisplacementSphere_visualizerBar__Qt6MU",pulse:"DisplacementSphere_pulse__LSYyI"}},8616:function(n,e,r){"use strict";function t(n,e){return t=Object.setPrototypeOf||function(n,e){return n.__proto__=e,n},t(n,e)}function i(n,e){return t(n,e)}function c(){if("undefined"===typeof Reflect||!Reflect.construct)return!1;if(Reflect.construct.sham)return!1;if("function"===typeof Proxy)return!0;try{return Date.prototype.toString.call(Reflect.construct(Date,[],(function(){}))),!0}catch(n){return!1}}function a(n,e,r){return a=c()?Reflect.construct:function(n,e,r){var t=[null];t.push.apply(t,e);var c=new(Function.bind.apply(n,t));return r&&i(c,r.prototype),c},a.apply(null,arguments)}function o(n,e,r){return a.apply(null,arguments)}r.d(e,{Z:function(){return o}})}}]);